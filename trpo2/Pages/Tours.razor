@page "/Tours"
@using trpo2.Models
@inject TourAgencyContext dbContext
@inject Microsoft.JSInterop.IJSRuntime JSRuntime
@using Microsoft.EntityFrameworkCore;
@using trpo2.Data;
@inject UserService userService;

<Header />

<div class="container">
    <h1 class="viborh1">Выберите тур</h1>

    <div class="form-group">
        <label for="country">Страна:</label>
        <select class="form-control" id="country" @onchange="ChangeCountry">
            @foreach (var country in Countries)
            {
                <option value="@country.CountryId">@country.Name</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="city">Город:</label>
        <select class="form-control" id="city" @onchange="ChangeCity">
            @foreach (var city in Cities)
            {
                <option value="@city.CityId">@city.Name</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="hotel">Отель:</label>
        <select class="form-control" id="hotel" @bind="selectedHotel">
            @foreach (var hotel in Hotels)
            {
                <option value="@hotel.HotelId">@hotel.Name</option>
            }
        </select>
    </div>
</div>

<style>
    .container {
    max-width: 600px; 
    margin: 0 auto; 
    padding: 20px; 
    background-color: #f9f9f9; 
    border-radius: 10px; 
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        position: absolute;
        top: 50%;
        background-image: url('https://i.ibb.co/sVF0gMf/image.png');
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .viborh1{
        text-align: center;
        font-family: Montserrat Black;
        color: black;

.form-group {
    margin-bottom: 20px; 
}

label {
    font-weight: bold; 
}

.form-control {
    width: 100%; 
    padding: 10px; 
    border-radius: 5px; 
    border: 1px solid #ccc; 
}

select.form-control {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='%23000000'%3E%3Cpath d='M10 12l-6-6 1.5-1.5L10 9l4.5-4.5L16 6'/%3E%3C/svg%3E");
    background-repeat: no-repeat; 
    background-position: right 10px center; 
}

.select-wrapper {
    position: relative; /
}

.select-wrapper::after {
    content: "\25BC"; 
    position: absolute; 
    top: 50%; 
    right: 10px; 
    transform: translateY(-50%); 
    pointer-events: none; 
}

.option-hidden {
    display: none; 
}

</style>

@code {
    private List<Country> Countries = null!;
    private List<City> Cities = null!;
    private List<Hotel> Hotels = null!;

    private int selectedCountry;
    private int selectedCity;
    private int selectedHotel;

    protected override void OnInitialized()
    {
        LoadCountries();
    }

    private void LoadCountries()
    {
        Countries = dbContext.Countries.ToList();
        if (Countries.Any())
        {
            selectedCountry = Countries.First().CountryId;
            StateHasChanged();
            LoadCities();
        }
    }

    private void ChangeCountry(ChangeEventArgs e)
    {
        selectedCountry = Convert.ToInt32(e.Value);
        LoadCities();
    }



    private void LoadCities()
    {
        Cities = dbContext.Cities.Where(c => c.CountryId == selectedCountry).ToList();
        StateHasChanged();
        LoadHotels();
    }


    private void ChangeCity(ChangeEventArgs e)
    {
        selectedCity = Convert.ToInt32(e.Value);
        LoadHotels();
    }



    private void LoadHotels()
    {
        Hotels = dbContext.Hotels.Where(h => h.CityId == selectedCity).ToList();
        StateHasChanged();
    }
}