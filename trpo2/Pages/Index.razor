@page "/"
@inject Microsoft.JSInterop.IJSRuntime JSRuntime
@inject TourAgencyContext dbContext

<PageTitle>Главная страница</PageTitle>

<div class="login-form">
        <h1 class="Vhonh">Вход</h1>

        <div class="form-group">
            <label for="firstName">Логин или почта:</label>
        <input type="text" maxlength="30" id="email" class="form-control" @bind="email" />
    </div>

        <div class="form-group">
            <label for="lastName">Пароль:</label>
        <input type="password" maxlength="8" id="password" class="form-control" @bind="password" />
    </div>

        <div class="buttons">
        <button type="submit" class="btn btn-primary" @onclick="Register">Войти</button>
        <button @onclick="RedirectToRegistrationPage" class=" btn btn-link">Нет аккаунта?</button>
        </div>
</div>
@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; } = null!;

    [Inject]
    private UserService UserService { get; set; } = null!;

    private void RedirectToRegistrationPage()
    {
        NavigationManager.NavigateTo("/RegistrationPage");
    }

    private string email;
    private string password;

    private async Task Register()
    {
        if (string.IsNullOrEmpty(email) ||
            string.IsNullOrEmpty(password))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Пожалуйста, заполните все обязательные поля.");
            return;
        }
        else{
            var user = await dbContext.Customers.FirstOrDefaultAsync(u => u.Email == email && u.Password == password);
            if (user != null)
            {
                UserService.CurrentUser = user;
                NavigationManager.NavigateTo("/Profile");
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", "Неверный адрес электронной почты или пароль.");
        }
    }
    }
}